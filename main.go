package main

import (
	"encoding/base64"
	"fmt"
	"io/ioutil"
	"os"
)

func encodeSamplePDF(filename string) {
	b64 := ``

	dec, err := base64.StdEncoding.DecodeString(b64)
	if err != nil {
		panic(err)
	}

	f, err := os.Create(filename)
	if err != nil {
		panic(err)
	}
	defer f.Close()

	if _, err := f.Write(dec); err != nil {
		panic(err)
	}

	if err := f.Sync(); err != nil {
		panic(err)
	}
}

func decodeSamplePDF(filename string) {
	if src, err := ioutil.ReadFile(filename); err != nil {
		panic(err)
	} else {
		fmt.Println(base64.StdEncoding.EncodeToString(src))
	}
}

func main() {
	encodeSamplePDF("sample.pdf")
	decodeSamplePDF("sample.pdf")
}
